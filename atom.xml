<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Gottox]]></title>
  <link href="http://gottox.de/atom.xml" rel="self"/>
  <link href="http://gottox.de"/>
  <updated>2014-08-02T07:17:02.537Z</updated>
  <id>http://gottox.de/</id>
  <author>
    <name><![CDATA[Enno Boland]]></name>
    <email><![CDATA[eb@s01.de]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Blackarmor 400 and a custom kernel]]></title>
    <link href="http://gottox.de/2014/08/02/Blackarmor-440-and-a-custom-kernel/"/>
    <id>http://gottox.de/2014/08/02/Blackarmor-440-and-a-custom-kernel/</id>
    <published>2014-08-01T22:49:20.000Z</published>
    <updated>2014-08-02T07:15:28.000Z</updated>
    <content type="html"><![CDATA[<p>The Blackarmor 400 is a 4 Slot NAS. I plan to get openwrt boot on it. I got<br>serial access to the bootloader using <a href="http://www.amazon.de/gp/product/B000V3OEEO/ref=oh_aui_detailpage_o06_s00?ie=UTF8&amp;psc=1" target="_blank" rel="external">a serial adapter</a><br>and plan to load the kernel via tftp.</p>
<p>This is a rough info page of the current state:</p>
<ul>
<li>arcNumber (used by the linux kernel to identify the board)<ul>
<li><a href="http://www.arm.linux.org.uk/developer/machines/list.php?id=2678" target="_blank" rel="external">2678</a></li>
</ul>
</li>
</ul>
<p>further readings:</p>
<ul>
<li><a href="http://www.noerenberg.de/hajo/pub/seagate-blackarmor-nas.txt" target="_blank" rel="external">Misc notes on the Seagate Blackarmor NAS, V1.15 </a></li>
<li><a href="https://forum.openwrt.org/viewtopic.php?id=36138" target="_blank" rel="external">Thread in the OpenWRT Forum</a></li>
<li><a href="https://origin-www.marvell.com/embedded-processors/kirkwood/assets/FS_88F6180_9x_6281_OpenSource.pdf" target="_blank" rel="external">Kirkwood Specs</a></li>
</ul>
]]></content>
    <category scheme="http://gottox.de/tags/hardware/" term="hardware"/>
    <category scheme="http://gottox.de/tags/blackarmor/" term="blackarmor"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[vnc2gif]]></title>
    <link href="http://gottox.de/2014/07/10/vnc2gif/"/>
    <id>http://gottox.de/2014/07/10/vnc2gif/</id>
    <published>2014-07-10T09:45:56.000Z</published>
    <updated>2014-07-10T10:17:52.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Gottox/vnc2gif/master/recording.gif" alt="vnc2gif"></p>
<p><a href="https://github.com/Gottox/vnc2gif" target="_blank" rel="external">vnc2gif</a> is a small tool which renders a VNC connection into an animated gif. It is based on an idea from <a href="https://github.com/sidorares/vnc-over-gif" target="_blank" rel="external">vnc-over-gif</a> which is a little more decent. Unfortunately it does not work on node-0.10, so I decided to rewrite it using <a href="https://www.npmjs.org/package/canvas" target="_blank" rel="external">node-canvas</a>.</p>
<p>node-canvas itself does not support animated gifs, so I had to use <a href="https://www.npmjs.org/package/gifencoder" target="_blank" rel="external">gifencoder</a>.</p>
<p>Unfortunately gifencoder is quite slow. I would prefere to implement animated gif support in node-canvas directly. The libraries which are used in node-canvas support animation (<a href="http://giflib.sourceforge.net/" target="_blank" rel="external">GIFLIB</a>) and the node-canvas API supports multiple Frames with the PDF-output. So an implementation of animated gifs in node-canvas is feasible.</p>
<p>Find the source at the <a href="https://github.com/Gottox/vnc2gif" target="_blank" rel="external">Github Repository</a></p>
]]></content>
    <category scheme="http://gottox.de/tags/node/" term="node"/>
    <category scheme="http://gottox.de/tags/gif/" term="gif"/>
    <category scheme="http://gottox.de/tags/canvas/" term="canvas"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[node-pdfutils on the way]]></title>
    <link href="http://gottox.de/2014/07/09/node-pdfutils-on-the-way/"/>
    <id>http://gottox.de/2014/07/09/node-pdfutils-on-the-way/</id>
    <published>2014-07-09T09:24:44.000Z</published>
    <updated>2014-07-09T14:18:41.000Z</updated>
    <content type="html"><![CDATA[<p>Version 0.4 of node-pdfutils is a complete rewrite of pdfutils.</p>
<p>The old design didn’t work out, I naively decided that it would be a<br>good idea to do as much as possible in C++ and keep the JS side minimal<br>in order to reduce context switches between JS and C++. Turns out this was<br>a bad idea. First of all, node will switch to a new v8-API with 0.12. This<br>means I have to rewrite big parts of the code once 0.12 is out. Furthermore<br>it turns out (surprise!) that the C++-part became messy and was harder to<br>maintain. With the new architecture, I keep the C++ smaller and better<br>structured. Also I kept in mind that the v8-API will change and it’ll be easy<br>to switch to the new one.</p>
<p>One of the most requested features is reordering/insert/extract<br>pages from/to a document. With this rewrite, we finally got a base<br>to do this. It’s not implemented yet, but it’s much easier to do now.</p>
<p>Also I’m proud to announce, that pdfutils will support multiple PDF-engines.</p>
<p>The 0.4 series will switch license: node-pdfutils was licensed under GPL before,<br>which makes it hard to include it with 3rd party products. 0.4 will be dual<br>licensed under MIT/GPL. The idea is, that you can choose to use MIT with any<br>GPL-free PDF-engine. If you want to use i.e. poppler, you have to use GPL, as<br>poppler is GPL itself (If I’m talking nonsense, please correct me.)</p>
<p>Github: <a href="https://github.com/Gottox/node-pdfutils/tree/rewrite-0.4" target="_blank" rel="external">https://github.com/Gottox/node-pdfutils/tree/rewrite-0.4</a></p>
<p>Docs: <a href="http://gottox.de/node-pdfutils" target="_blank" rel="external">http://gottox.de/node-pdfutils</a></p>
]]></content>
  </entry>
</feed>
